How did viewing a diff between two versions of a file help you see the bug that was introduced?
- much fast than comparing manually
- stuctured output -> differences are more easy to see

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
- access to all changes
- chronological order of changes available
- possibility to move back to any older versions
- easy to compare

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
- pros
  * you can commit whenever a change was done, which relates to a logical unit 
- cons
  * you may miss to commit at the right point in time

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
- in case it make sense to track changes across files it makes sense to commit all changes to all file in one
- as Git is for code and while coding very often changes effect multiple files

How can you use the commands git log and git diff to view the history of files?
- see which commits were made
- see how many changes were made
- see which changes were made

How might using version control make you more confident to make changes that could break something?
- you can easily revert them back

Now that you have your workspace set up, what do you want to try using Git for?
- coding